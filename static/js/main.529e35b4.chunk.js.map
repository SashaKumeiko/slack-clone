{"version":3,"sources":["StateProvider.js","components/Header.js","firebase.js","components/SidebarOption.js","components/Sidebar.js","components/Message.js","components/ChatInput.js","components/Chat.js","reducer.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Header","user","className","Avatar","alt","displayName","src","photoURL","type","placeholder","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarOption","Icon","title","id","addChannelOption","history","useHistory","onClick","channelName","prompt","collection","add","name","push","Sidebar","useState","channels","setChannels","useEffect","onSnapshot","snapshot","docs","map","doc","data","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","channel","Message","message","timestamp","userImage","Date","toDate","toUTCString","ChatInput","channelId","input","setInput","console","log","onChange","e","target","preventDefault","FieldValue","serverTimestamp","Chat","roomId","useParams","substring","roomDetails","setRoomDetails","roomMessages","setRoomMessages","orderBy","clannelName","state","action","Login","dispatch","Button","signInWithPopup","then","res","catch","err","alert","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.529e35b4.chunk.js","sourcesContent":["import React, {useContext, createContext, useReducer} from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({reducer, initialState, children}) => {\r\n  return (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n      {children}\r\n    </StateContext.Provider>\r\n  );\r\n};\r\n \r\nexport const useStateValue = ()=> useContext(StateContext)","import React from 'react'\r\nimport {Avatar} from '@material-ui/core'\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n\r\nimport './Header.css'\r\nimport { useStateValue } from '../StateProvider';\r\n\r\n\r\nexport const Header = () => {\r\n\r\n    const [{user}]= useStateValue()\r\n    return (\r\n        <div className=\"header\">\r\n        <div className=\"header__left\">\r\n        <Avatar className=\"header__avatar\"\r\n        alt={user?.displayName}\r\n        src={user.photoURL}\r\n        />\r\n        <AccessTimeIcon/>\r\n        </div>\r\n        <div className=\"header__search\">\r\n        <SearchIcon/>\r\n        <input type=\"text\" placeholder=\"search\"/></div>\r\n        <div className=\"header__right\"></div>\r\n            <HelpIcon/>\r\n        </div>\r\n    )\r\n}\r\n","import firebase from 'firebase'\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAYykpZEzaoeTIWEp6MvJjrZqgdl6WBgrE\",\r\n  authDomain: \"slackclone-9efd0.firebaseapp.com\",\r\n  databaseURL: \"https://slackclone-9efd0.firebaseio.com\",\r\n  projectId: \"slackclone-9efd0\",\r\n  storageBucket: \"slackclone-9efd0.appspot.com\",\r\n  messagingSenderId: \"997157361776\",\r\n  appId: \"1:997157361776:web:6f07f4a595744f19c23cb5\",\r\n  measurementId: \"G-CVBQ9Y9BS8\"\r\n};\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig)\r\n\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth()\r\n  const provider = new firebase.auth.GoogleAuthProvider()\r\n\r\n  export { auth, provider }\r\n  export default db;","import React from 'react';\r\nimport './SidebarOption.css';\r\nimport {useHistory} from 'react-router-dom';\r\nimport db from \"../firebase\"\r\n\r\nexport const SidebarOption = ({Icon, title, id, addChannelOption}) => {\r\n    const history = useHistory();\r\n\r\n  const selectChannel = () => {\r\n\r\n    if (id) {\r\n      history.push(`/room/:${id}`);\r\n    }\r\n    else {\r\n        history.push(title)\r\n    }\r\n  };\r\n\r\nconst addChannel =()=>{\r\n    const channelName = prompt(\"please enter channel name\");\r\n    if(channelName){\r\n    db.collection(\"rooms\").add({\r\n        name: channelName\r\n    })\r\n    }\r\n}\r\n\r\n  return (\r\n    <div\r\n      className=\"sidebarOption\"\r\n      onClick={addChannelOption ? addChannel : selectChannel}\r\n    >\r\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\r\n      {Icon ? (\r\n        <h3> {title} </h3>\r\n      ) : (\r\n        <h3 className=\"sidebarOption__channel\">\r\n          <span className=\"sidebarOption__hash\"> # </span>\r\n          {title}\r\n        </h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, {useState,useEffect} from 'react';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { SidebarOption } from './SidebarOption';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport InsertCommentIcon from '@material-ui/icons/InsertComment';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandLess';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport db from '../firebase.js'\r\nimport { useStateValue } from '../StateProvider';\r\n\r\nimport './Sidebar.css';\r\n\r\nexport const Sidebar = () => {\r\n    const [channels, setChannels] = useState([])\r\n    const [{user}]= useStateValue()\r\n\r\n    useEffect(() => {\r\n        db.collection(\"rooms\").onSnapshot(snapshot=>{\r\n            setChannels(snapshot.docs.map(doc=>({\r\n                id: doc.id,\r\n                name: doc.data().name \r\n            }))\r\n\r\n        )\r\n        })\r\n    }, []);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__header\">\r\n        <div className=\"sidebar__info\">\r\n          <h2>Slack Clone</h2>\r\n          <h3>\r\n            <FiberManualRecordIcon />\r\n            {user?.displayName}\r\n          </h3>\r\n        </div>\r\n        <CreateIcon/>\r\n      </div>\r\n      <SidebarOption Icon={InsertCommentIcon} title=\"Threads\"/>\r\n      <SidebarOption title=\"Mentions & reactions\" Icon={InboxIcon} />\r\n      <SidebarOption Icon={DraftsIcon} title=\"Saved items\"/>\r\n      <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel browser\"/>\r\n      <SidebarOption Icon={PeopleAltIcon} title=\"People & user groups\"/>\r\n      <SidebarOption Icon={AppsIcon} title=\"Apps\"/>\r\n      <SidebarOption Icon={FileCopyIcon} title=\"File browser\"/>\r\n      <SidebarOption Icon={ExpandLessIcon} title=\"Show less\"/>\r\n      <hr/>\r\n      <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\"/>\r\n      <hr/>\r\n      <SidebarOption Icon={AddIcon} addChannelOption title=\"Add channel\"/>\r\n\r\n        {channels.map(channel=>{\r\n            return <SidebarOption title={channel.name} id={channel.id}/>\r\n        })}\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport './Message.css'\r\n\r\nexport const Message = ({message, timestamp, user, userImage}) => {\r\n    return (\r\n        <div className='message'>\r\n            <img src={userImage} alt=\"\"/>\r\n            <div className=\"message__info\">\r\n            <h4>{user} <span className=\"message__timestamp\">{new Date(timestamp?.toDate()).toUTCString()}</span>  </h4>\r\n            <p>{message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport './ChatInput.css'\r\nimport db from '../firebase';\r\nimport { useStateValue } from '../StateProvider';\r\nimport firebase from 'firebase'\r\n\r\nexport const ChatInput = ({channelName, channelId}) => {\r\n    const [input, setInput] = useState('');\r\n    const [{user}] = useStateValue()\r\n\r\n\r\n    const sendMessage=(e)=>{\r\n        e.preventDefault();\r\n        if(channelId){\r\n\r\n            db.collection(\"rooms\").doc(channelId).collection(\"messages\").add(\r\n                {\r\n                   message: input,\r\n                   timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                   user: user.displayName,\r\n                   userImage: user.photoURL \r\n                }\r\n            ) \r\n        }\r\n        setInput(\"\")\r\n    }\r\n    console.log(channelName)\r\n  return (\r\n    <div className=\"chatInput\">\r\n      <form>\r\n        <input placeholder='input message'\r\n        value={input} onChange={e=>setInput(e.target.value)}/>\r\n        <button onClick={sendMessage}>SEND</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport './Chat.css';\r\nimport {useParams} from 'react-router-dom';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport db from '../firebase';\r\nimport {Message} from './Message';\r\nimport { ChatInput } from './ChatInput';\r\n\r\nexport const Chat = () => {\r\n  let {roomId} = useParams();\r\n  roomId = roomId.substring(1);\r\n  const [roomDetails, setRoomDetails] = useState(null);\r\n  const [roomMessages, setRoomMessages] = useState([]);\r\n  console.log(roomDetails)\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      db.collection('rooms')\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => {\r\n          console.log(snapshot.data());\r\n          setRoomDetails(snapshot.data());\r\n        });\r\n      db.collection('rooms')\r\n        .doc(roomId)\r\n        .collection('messages')\r\n        .orderBy('timestamp', 'asc')\r\n        .onSnapshot((snapshot) => {\r\n          setRoomMessages(snapshot.docs.map((doc) => doc.data()));\r\n        });\r\n    }\r\n  }, [roomId]);\r\n  console.log(roomMessages);\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__header\">\r\n        <div className=\"chat__headerLeft\">\r\n          <h4 className=\"chat__channelName\">\r\n            <strong>#{roomDetails?.name}</strong>\r\n            <StarBorderIcon />\r\n          </h4>\r\n        </div>\r\n        <div className=\"chat__headerRight\">\r\n          <p>\r\n            <InfoIcon />\r\n            details\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat__messages\">\r\n        {roomMessages.map(({user,message,timestamp, userImage}) => (\r\n          <Message user={user} message={message} userImage={userImage} timestamp={timestamp} />\r\n        ))}\r\n      </div>\r\n          <ChatInput clannelName={roomDetails?.name} channelId={roomId}/>\r\n\r\n    </div>\r\n  );\r\n};\r\n","export const initialState = { user: null }\r\n\r\nexport const SET_USER = \"SET_USER\"\r\n\r\nconst reducer = (state, action)=>{\r\n    switch(action.type){\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            } \r\n            default:\r\n                return state\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react';\r\nimport './Login.css';\r\nimport {Button} from '@material-ui/core';\r\nimport {auth, provider} from '../firebase';\r\nimport {useStateValue} from '../StateProvider';\r\nimport {SET_USER} from '../reducer';\r\n\r\nexport const Login = () => {\r\n  const [state, dispatch] = useStateValue();\r\nconsole.log(SET_USER)\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((res) => {\r\n        console.log(res);\r\n        dispatch({\r\n          type: SET_USER,\r\n          user: res.user,\r\n        });\r\n      })\r\n      .catch((err) => alert(err.message));\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__container\">\r\n        <img\r\n          src=\"https://www.logo.wine/a/logo/Slack_Technologies/Slack_Technologies-Logo.wine.svg\"\r\n          alt=\"\"\r\n        />\r\n        <h1>Sign in to Slack-clone</h1>\r\n        <Button onClick={signIn}>Sign in with Google</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport {Header} from './components/Header';\nimport {Sidebar} from './components/Sidebar';\nimport {BrowserRouter as  Router, Switch, Route} from 'react-router-dom';\n\nimport './App.css';\nimport {Chat} from './components/Chat';\nimport { Login } from './components/Login';\nimport { useStateValue } from './StateProvider';\n\nfunction App() {\nconst [{user}] = useStateValue()\nconsole.log(user)\n\n  return (\n    <div className=\"app\">\n      <Router>\n      \n      {!user ? <Login/> : <><Header />\n        <div className=\"app__body\">\n          <Sidebar />\n          <Switch>\n            <Route path=\"/room/:roomId\">\n              <Chat /> \n            </Route>\n            <Route path=\"/\">\n              <h1>Welcome</h1>\n            </Route>\n          </Switch>\n        </div></> }\n       \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './StateProvider';\nimport reducer, { initialState } from './reducer';\n\nReactDOM.render(\n    <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n      </StateProvider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}